/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Database.DBConnection;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author HP
 */
public class FormBarang extends javax.swing.JFrame {

    /**
     * Creates new form FormBarang
     */
    public FormBarang() {
        initComponents();
        try {
            initDB();
            isiGrid();
        } catch (ClassNotFoundException ex) {
            // ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Driver tidak ditemukan", "Error Driver", JOptionPane.ERROR_MESSAGE);

        } catch (SQLException ex) {
            //ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal Tersambung dengan MySQL", "Error SQL Connection", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tKodeBarang = new javax.swing.JTextField();
        tNamaBarang = new javax.swing.JTextField();
        tHarga = new javax.swing.JTextField();
        tStok = new javax.swing.JTextField();
        cbWarna = new javax.swing.JComboBox<String>();
        cbMerek = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        bSimpan = new javax.swing.JButton();
        bBaru = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bTutup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Kode Barang :");

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nama Barang :");

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Merek :");

        jLabel4.setBackground(new java.awt.Color(51, 51, 51));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Warna :");

        jLabel5.setBackground(new java.awt.Color(51, 51, 51));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Harga :");

        jLabel6.setBackground(new java.awt.Color(51, 51, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Stok :");

        tKodeBarang.setEditable(false);
        tKodeBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tKodeBarangActionPerformed(evt);
            }
        });

        tStok.setEditable(false);

        cbWarna.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~Choose Color~", "Red", "Black", "White", "Silver", "Gold" }));

        cbMerek.setToolTipText("");
        cbMerek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMerekActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tKodeBarang)
                    .addComponent(tNamaBarang)
                    .addComponent(tHarga)
                    .addComponent(tStok)
                    .addComponent(cbWarna, 0, 561, Short.MAX_VALUE)
                    .addComponent(cbMerek))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbMerek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbWarna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        bSimpan.setBackground(new java.awt.Color(204, 204, 204));
        bSimpan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bSimpan.setText("Simpan");
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });

        bBaru.setBackground(new java.awt.Color(204, 204, 204));
        bBaru.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bBaru.setText("Baru");
        bBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBaruActionPerformed(evt);
            }
        });

        bHapus.setBackground(new java.awt.Color(204, 204, 204));
        bHapus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bTutup.setBackground(new java.awt.Color(204, 204, 204));
        bTutup.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bTutup.setText("Tutup");
        bTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTutupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bSimpan)
                .addGap(39, 39, 39)
                .addComponent(bBaru, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(bHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bTutup)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSimpan)
                    .addComponent(bBaru)
                    .addComponent(bHapus)
                    .addComponent(bTutup))
                .addContainerGap())
        );

        grid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        grid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grid);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 218, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
         try {
            // TODO add your handling code here:
            simpan();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Kesalahan SQL : " + ex.getMessage(), "Error SQL", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Kesalahan Input Angka", "Error Input Number", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bSimpanActionPerformed

    private void bBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBaruActionPerformed
        // TODO add your handling code here:
        bersih();
    }//GEN-LAST:event_bBaruActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
         try {
            // TODO add your handling code here:
            hapus();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Kesalahan SQL : " + ex.getMessage(), "Error SQL", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTutupActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_bTutupActionPerformed

    private void tKodeBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tKodeBarangActionPerformed
        // TODO add your handling code here:
        try {
            isiForm(tKodeBarang.getText());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Kesalahan SQL : " + ex.getMessage(), "Error SQL", JOptionPane.ERROR_MESSAGE);
        }
        (tKodeBarang).setEditable(false);
        (tKodeBarang).setEnabled(true);
    }//GEN-LAST:event_tKodeBarangActionPerformed

    private void gridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridMouseClicked
        // TODO add your handling code here:
         if (evt.getClickCount() > 1) {
            try {
                isiForm(grid.getValueAt(grid.getSelectedRow(), 0) + "");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Kesalahan SQL : " + ex.getMessage(), "Error SQL", JOptionPane.ERROR_MESSAGE);
            }
        }
                        

    }//GEN-LAST:event_gridMouseClicked

    private void cbMerekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMerekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMerekActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBarang().setVisible(true);
            }
        });
    }
    
     private void initDB() throws ClassNotFoundException, SQLException {
        this.conn = DBConnection.getInstance().getConnection();

        psInsert = this.conn.prepareStatement("INSERT INTO BARANG VALUES (?,?,?,?,?,?)");
        psUpdate = this.conn.prepareStatement("UPDATE BARANG SET NAMA=?, MEREK=?, "
                + "STOK=?, HARGA=?, WARNA=? WHERE KODE=?");
        psDelete = this.conn.prepareStatement("DELETE FROM BARANG WHERE KODE=?");
        psSelectID = this.conn.prepareStatement("SELECT * FROM BARANG WHERE KODE=?");
        psSelectMAXID = this.conn.prepareStatement("SELECT COUNT(KODE) as KODE FROM BARANG");
        psSelectAll = this.conn.prepareStatement("SELECT * FROM BARANG");

    }

    private void simpan() throws SQLException {
        if (!cekIsian()) {
            JOptionPane.showMessageDialog(this, "Lengkapi Isian", "Error Input", JOptionPane.ERROR_MESSAGE);
        } else {
            psSelectID.setString(1, tKodeBarang.getText());
            ResultSet rs = psSelectID.executeQuery();

            if (rs.next()) {
                //jika sudah ada (UPDATE)
                if (JOptionPane.showConfirmDialog(this,
                        "Data sudah ada, \nApakah Ingin di Update?",
                        "Konfirmasi Update", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

                    psUpdate.setString(1, tNamaBarang.getText());
                    psUpdate.setString(2, cbMerek.getText() + "");
                    psUpdate.setString(3, "1"); //tStok.getText()
                    psUpdate.setInt(4, Integer.parseInt(tHarga.getText()));
                    psUpdate.setString(5, cbWarna.getSelectedItem() + "");
                    psUpdate.setString(6, tKodeBarang.getText());

                    psUpdate.execute();

                    JOptionPane.showMessageDialog(this, "Data Berhasil di Update!");
                    bersih();
                    isiGrid();
                }

            } else {
                //jika belum ada (INSERT)

                psInsert.setString(1, tKodeBarang.getText());
                psInsert.setString(2, tNamaBarang.getText());
                psInsert.setString(3, cbMerek.getText() + "");
                psInsert.setString(4, "1"); //tStok.getText()
                psInsert.setInt(5, Integer.parseInt(tHarga.getText()));
                psInsert.setString(6, cbWarna.getSelectedItem() + "");

                psInsert.execute();

                JOptionPane.showMessageDialog(this, "Data Berhasil di Inputkan!");
                bersih();
                isiGrid();

            }
        }
    }

    private void hapus() throws SQLException {
        psSelectID.setString(1, tKodeBarang.getText());
        ResultSet rs = psSelectID.executeQuery();

        if (rs.next()) {
            //jika sudah ada (UPDATE)
            if (JOptionPane.showConfirmDialog(this, "Yakin Ingin Menghapus?",
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                psDelete.setString(1, tKodeBarang.getText());
                psDelete.execute();

                JOptionPane.showMessageDialog(this, "Data Berhasil dihapus!");
                bersih();
                isiGrid();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data Tidak ditemukan");
        }
    }

    private boolean cekIsian() {
        return tKodeBarang.getText().length() > 0
                && tNamaBarang.getText().length() > 0
                && tHarga.getText().length() > 0;
    }

    protected void bersih() {
        tKodeBarang.setText("");
        tNamaBarang.setText("");
        cbMerek.setText("");
        tStok.setText("0");
        tHarga.setText("0");
        cbWarna.setSelectedIndex(0);
    }

    private void isiGrid() throws SQLException {
        String namaKolom[] = new String[]{"KODE BARANG", "NAMA BARANG", "MEREK", "HARGA", "WARNA","STOCK"};

        int baris;
        ResultSet rs = psSelectAll.executeQuery();
        rs.last();
        baris = rs.getRow();
        rs.beforeFirst();

        Object data[][] = new Object[baris][6];
        baris = 0;
        while (rs.next()) {
            data[baris][0] = rs.getString("KODE");
            data[baris][1] = rs.getString("NAMA");
            data[baris][2] = rs.getString("MEREK");
            data[baris][3] = rs.getInt("HARGA");
            data[baris][4] = rs.getString("WARNA");
            data[baris][5] = rs.getString("STOK");

            baris++;
        }
        DefaultTableModel model = new DefaultTableModel(data, namaKolom) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };
        rs.close();
        grid.setModel(model);
                    int baris1;
            ResultSet rs1 = psSelectMAXID.executeQuery();
            rs1.last();
            baris1 = baris;
            rs1.beforeFirst();
            baris1 = baris1+1;
            tKodeBarang.setText(""+baris1);

    }
    

    private void isiForm(String kode) throws SQLException {
        psSelectID.setString(1, kode);
        ResultSet rs = psSelectID.executeQuery();
        if (rs.next()) {
            tKodeBarang.setText(rs.getString(1));
            tNamaBarang.setText(rs.getString(2));
            cbMerek.setText(rs.getString(3));
            tHarga.setText(rs.getInt(4) + "");
            cbWarna.setSelectedItem(rs.getString(5));
            tStok.setText(rs.getString(6));
        }
        rs.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBaru;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bSimpan;
    private javax.swing.JButton bTutup;
    private javax.swing.JTextField cbMerek;
    private javax.swing.JComboBox<String> cbWarna;
    private javax.swing.JTable grid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tHarga;
    private javax.swing.JTextField tKodeBarang;
    private javax.swing.JTextField tNamaBarang;
    private javax.swing.JTextField tStok;
    // End of variables declaration//GEN-END:variables
     private Connection conn;

    private PreparedStatement psInsert;
    private PreparedStatement psUpdate;
    private PreparedStatement psDelete;
    private PreparedStatement psSelectID;
    private PreparedStatement psSelectAll;
    private PreparedStatement psSelectMAXID;
}
